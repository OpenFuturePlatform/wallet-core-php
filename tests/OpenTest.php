<?php

namespace OPEN;

class OpenTest extends \PHPUnit\Framework\TestCase
{
    public function testWalletGenerate()
    {
        $open = new OPEN();
        $result = $open->generateWallet(60, false);
        $this->assertNotEmpty($result, "wallet is empty");
    }

    public function testWalletImport()
    {
        $open = new OPEN();
        $address = $open->importWallet("0x15e9df2c39a3d2b12f9e72e23cabeaccd2cd25255a816f4d0b30e39188e3ece4", 60);
        $this->assertSame("0x83439fA399ceC0B1667dA7e938e080Afd4587f8e", $address);
    }

    public function testTransactionSign()
    {
        $open = new OPEN();
        $privateKey = "0x15e9df2c39a3d2b12f9e72e23cabeaccd2cd25255a816f4d0b30e39188e3ece4";
        $toAddress = "0x014D9Fcdb245CF31BfbaD92F3031FE036fE91Bc3";
        $goerliChainId = "05";
        $gasPrice = "42000000000"; //22GWei 
        $gasLimit = "21000";
        $amount = "924400000000000"; //0.0009244 ETH
        $nonce = 3;
        $signature = $open->sign($privateKey, $toAddress, $goerliChainId, $gasPrice, $gasLimit, $amount, $nonce);
        $this->assertSame("f86b038509c765240082520894014d9fcdb245cf31bfbad92f3031fe036fe91bc3870348bca5a16000802da04fa26967f73a3653c2aa4a1d32115235ec4f53753943ac64bf0d68edea208aafa01deb0f474398a8ff75ee07f55b7d08dd3728dd2767ae3c614ce82050feebfcfd", $signature);
    }

    public function testEncrypt()
    {
        $open = new OPEN();
        $encryptedData = $open->encrypt(60, "723b79529c433a8ed714e8f2d67288a09faa0c75aba40a1968d2be65aee1c04f", "password", false);
        $this->assertSame("5191818b3e6090760eb6cb582eab2a833552d5d7880ef2c0caf1149d7743e3e5", $encryptedData);
    }

    public function testDecrypt()
    {
        $open = new OPEN();
        $decryptedData = $open->decrypt("5191818b3e6090760eb6cb582eab2a833552d5d7880ef2c0caf1149d7743e3e5", "password");
        $this->assertSame("723b79529c433a8ed714e8f2d67288a09faa0c75aba40a1968d2be65aee1c04f", $decryptedData);
    }
}
